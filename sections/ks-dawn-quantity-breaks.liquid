{% liquid 
  # KS Quantity Breaks
  # Â© 2024 KondaSoft
  # https://www.kondasoft.com
%}

{% liquid 
  assign current_variant = product.selected_or_first_available_variant
%}

{%- stylesheet -%}
  .ks-qty-breaks {
    max-width: 44rem;
    transition: all .2s
  }

  .ks-qty-breaks-title {
    margin: 0 0 10px;
  }

  .ks-qty-breaks-list { 
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .ks-qty-breaks-list-item {    
    position: relative;
  }

  .ks-qty-breaks-list-item input {
    position: absolute;
    left: 10px;
    top: 24px;
    margin: 0;
  } 

  .ks-qty-breaks-list-item input + label {
    display: block;
    width: 100%;
    cursor: pointer;
    border: 1px solid rgba(var(--color-foreground), .1);
    border-radius: 0;
    padding: 6px 8px 6px 32px;
    margin: 8px 0;
    transition: all .2s ease-out;
  }

  .ks-qty-breaks-list-item input + label:hover,
  .ks-qty-breaks-list-item input + label:focus {
    background-color: rgba(var(--color-foreground), .05);
  }

  .ks-qty-breaks-list-item input:checked + label {
    background-color: rgba(var(--color-foreground), .05);
    border-color: rgba(var(--color-foreground), 1);
  }

  .ks-qty-breaks-label-inner {
    display: flex;
    justify-content: space-between;
  }

  .ks-qty-breaks-label-title {
    font-weight: bold; 
  }

  .ks-qty-breaks-label-title span {
    font-weight: normal;
    background-color: rgba(var(--color), .1);
    border: 1px solid rgba(var(--color), .1);
    color: rgba(var(--color), 1);
    font-size: .75em;
    border-radius: 50rem;
    margin-left: 4px;
    padding: 1px 8px;
    transform: translateY(-2px);
    display: inline-flex;
    line-height: normal;
  }

  .ks-qty-breaks-label-subtitle {
    font-size: .9em;
    opacity: .8;
    margin-top: -8px;
  }

  .ks-qty-breaks-label-total {
    font-weight: bold;
    text-align: right;
  }

  .ks-qty-breaks-label-total s {
    display: block;
    font-weight: normal;
    margin-top: -8px;
    opacity: .6;
  }

  .ks-qty-breaks-variants {
    margin: 4px 0 0;
    display: none;
  }
 
  .ks-qty-breaks-list-item input:checked + label .ks-qty-breaks-variants {
    display: block;
  }

  .ks-qty-breaks-list-item input:checked + label .ks-qty-breaks-variants[hidden] {
    display: none;
  }

  .ks-qty-breaks-variant {
    display: flex;
    align-items: center;
    padding: 4px 0px;
  }

  .ks-qty-breaks-variant-title {
    width: 22px;
    height: 22px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 12px;
    font-weight: 500;
    margin: 0 10px 0 0;
    background-color: rgba(var(--color-foreground), 1);
    border: 1px solid rgba(var(--color-foreground), 1);
    color: rgba(var(--color-background), 1);
    flex-shrink: 0;
  }

  .ks-qty-breaks-variant-options {
    display: flex;
    gap: 8px;
  }

  .ks-qty-breaks-variant-option {
    display: flex;
    flex-direction: column;
  }

  .ks-qty-breaks-variant-option .ks-form-label {
    font-size: 12px;
    margin: 0 0 6px;
  }

  .ks-qty-breaks-variant-option .ks-form-select {
    background-color: rgba(var(--color-background), 1);
    border: 1px solid rgba(var(--color-foreground), .2);
    color: rgba(var(--color-foreground), 1);
    padding: 3px 3px;
    width: 100%;
    font-size: 14px;
  }

  product-info .product-form__quantity,
  product-info .shopify-payment-button {
    display: none;
  }

  .animate__animated {
    -webkit-animation-duration: 1s;
    animation-duration: 1s;
    -webkit-animation-fill-mode: both;
    animation-fill-mode: both;
  }

  .animate__shakeX {
    -webkit-animation-name: shakeX;
    animation-name: shakeX
  } 

  @keyframes shakeX {
    0%,to {
      -webkit-transform: translateZ(0);
      transform: translateZ(0)
    }
    10%, 30%, 50%, 70%, 90% {
      -webkit-transform: translate3d(-10px,0,0);
      transform: translate3d(-10px,0,0)
    }
    20%, 40%, 60%, 80% {
      -webkit-transform: translate3d(10px,0,0);
      transform: translate3d(10px,0,0)
    }
  }

  .animate__flash {
    -webkit-animation-name: flash;
    animation-name: flash
  }

  @keyframes flash {
    0%, 50%, to {
      opacity: 1
    }
    25%, 75% {
      opacity: 0
    }
  }

  .animate__heartBeat {
    -webkit-animation-name: heartBeat;
    animation-name: heartBeat;
    -webkit-animation-duration: 1.3s;
    animation-duration: 1.3s;
    -webkit-animation-timing-function: ease-in-out;
    animation-timing-function: ease-in-out
  }

  @keyframes heartBeat {
    0% {
      -webkit-transform: scale(1);
      transform: scale(1)
    }
    14% {
      -webkit-transform: scale(1.3);
      transform: scale(1.3)
    }
    28% {
      -webkit-transform: scale(1);
      transform: scale(1)
    }
    42% {
      -webkit-transform: scale(1.3);
      transform: scale(1.3)
    }
    70% {
      -webkit-transform: scale(1);
      transform: scale(1)
    }
  }

  .animate__tada {
    -webkit-animation-name: tada;
    animation-name: tada
  }

  @keyframes tada {
    0% {
      -webkit-transform: scaleX(1);
      transform: scaleX(1)
    }
    10%, 20% {
      -webkit-transform: scale3d(.9,.9,.9) rotate(-3deg);
      transform: scale3d(.9,.9,.9) rotate(-3deg)
    }
    30%, 50%, 70%, 90% {
      -webkit-transform: scale3d(1.1,1.1,1.1) rotate(3deg);
      transform: scale3d(1.1,1.1,1.1) rotate(3deg)
    }
    40%, 60%, 80% {
      -webkit-transform: scale3d(1.1,1.1,1.1) rotate(-3deg);
      transform: scale3d(1.1,1.1,1.1) rotate(-3deg)
    }
    to {
      -webkit-transform: scaleX(1);
      transform: scaleX(1)
    }
  }

  /*
    Form elements
  */
  .bs-form-check {
    display: flex;
    align-items: center;
  }

  input.bs-form-check-input {
    flex-shrink: 0;
    width: 1.25rem;
    height: 1.25rem;
    margin: 0 .75rem 0 0;
    appearance: none;
    background-color: transparent;
    background-image: var(--bs-form-check-bg-image);
    background-repeat: no-repeat;
    background-position: center;
    background-size: contain;
    border: 1px solid rgba(var(--color-foreground), .5);
  }

  input.bs-form-check-input[type=checkbox] {
    /* width: 1.5rem;
    height: 1.5rem; */
    border-radius: .25em;
  }

  input.bs-form-check-input[type=radio] {
    border-radius: 50%;
  }

  input.bs-form-check-input:active {
    filter: brightness(90%);
  }

  input.bs-form-check-input:focus {
    border-color: rgba(var(--color-background), 1);
    outline: 0;
    box-shadow: 0 0 0 .25rem rgba(var(--color-foreground), .25);
  }

  input.bs-form-check-input:checked {
    background-color: rgba(var(--color-foreground), 1);
    border-color: rgba(var(--color-foreground), 1);
  }

  .bs-form-check-input:checked[type=checkbox] {
    --bs-form-check-bg-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='m6 10 3 3 6-6'/%3e%3c/svg%3e")
  }

  input.bs-form-check-input:checked[type=radio] {
    --bs-form-check-bg-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='2' fill='%23fff'/%3e%3c/svg%3e")
  }

  input.bs-form-check-input[type=checkbox]:indeterminate {
    background-color: rgba(var(--color-foreground), 1);
    border-color: rgba(var(--color-foreground), 1);
    --bs-form-check-bg-image:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10h8'/%3e%3c/svg%3e")
  }

  .bs-form-check-input:disabled {
    pointer-events: none;
    filter: none;
    opacity: .5
  }

  .bs-form-check-input:disabled~.form-check-label,
  .bs-form-check-input[disabled]~.form-check-label {
    cursor: default;
    opacity: .5;
  }

{%- endstylesheet -%}

<style>
  .ks-qty-breaks-title {
    text-align: {{ section.settings.title_text_align }}
  }

  .ks-qty-breaks-list-item input + label {
    border-color: rgba(var(--color-foreground), {{ section.settings.item_border_opacity | append: '%' }});
    border-radius: {{ section.settings.item_border_radius | append: 'px' }};
  } 

  .ks-qty-breaks-label-title span {
    --color: {{ section.settings.badge_color.red | append: ', ' | append: section.settings.badge_color.green | append: ', ' | append: section.settings.badge_color.blue }};
  }
</style>

{%- javascript -%}
  const injectQtyBreaks = () => {
    const wrapper = document.querySelector('#ks-qty-breaks-hidden')

    const productInfo = document.querySelector('product-info')
    const productFormQty = productInfo.querySelector('.product-form__quantity')
    const atcButton = productInfo.querySelector('button[name="add"]')
    const variantData =  JSON.parse(document.querySelector('#ks-qty-breaks [type="application/json"]').textContent)
    // console.log(variantData)

    productInfo.querySelector('#ks-qty-breaks')?.remove()
    
    document.querySelector(wrapper.dataset.injectElement).insertAdjacentHTML(wrapper.dataset.injectElementPosition, `
      ${wrapper.innerHTML}
    `)

    document.querySelectorAll('#ks-qty-breaks input[name="ks-qty-breaks"]').forEach(input => { 
      input.addEventListener('change', () => {

        if (wrapper.dataset.btnAnimate.length) {
          setTimeout(() => {
            productInfo.querySelector('button[name="add"]').classList.add('animate__animated', wrapper.dataset.btnAnimate)
          }, 250)

          setTimeout(() => {
            productInfo.querySelector('button[name="add"]').classList.remove('animate__animated', wrapper.dataset.btnAnimate)
          }, 1500)
        }
      })
    })

    document.querySelectorAll('#ks-qty-breaks .ks-qty-breaks-variant-option select').forEach(elem => {
      elem.addEventListener('change', () => {

        let totalPrice = 0
        const discount = Number(elem.closest('.ks-qty-breaks-list-item').querySelector('input[name="ks-qty-breaks"]').dataset.discount)
        console.log(discount)

        document.querySelectorAll('#ks-qty-breaks [name="ks-qty-breaks"]:checked + label .ks-qty-breaks-variant').forEach(elem => {
          const selectedOptions = []

          elem.querySelectorAll('select').forEach(select => {
            selectedOptions.push(select.value)
          })

          const selectedVariant = variantData.find(variant =>
            JSON.stringify(variant.options) === JSON.stringify(selectedOptions)
          )

          totalPrice += selectedVariant.price
        })
        

        elem.closest('.ks-qty-breaks-list-item').querySelector('.ks-qty-breaks-label-total').innerHTML = `
          ${formatMoney(totalPrice * (100 - discount) / 100).replace('.00', '')} <s>${formatMoney(totalPrice).replace('.00', '')}</s>
        `

      })
    })

    atcButton.classList.remove('button--secondary')

    atcButton.addEventListener('click', async (event) => {
      event.preventDefault()
      
      atcButton.setAttribute('aria-disabled', true)
      atcButton.classList.add('loading')
      atcButton.querySelector('.loading__spinner').classList.remove('hidden')

      const items = []

      document.querySelectorAll('#ks-qty-breaks [name="ks-qty-breaks"]:checked + label .ks-qty-breaks-variant').forEach(elem => {
        const selectedOptions = []

        elem.querySelectorAll('select').forEach(select => {
          selectedOptions.push(select.value)
        })

        const selectedVariant = variantData.find(variant =>
          JSON.stringify(variant.options) === JSON.stringify(selectedOptions)
        )
        items.unshift({
          id: selectedVariant.id,
          quantity: 1
        })
      })

      const cart = document.querySelector('cart-notification') || document.querySelector('cart-drawer')
      let sections = cart.getSectionsToRender().map((section) => section.id)

      const response = await fetch(`${window.Shopify.routes.root}cart/add.js`, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ items, sections })
      })
      const responseData = await response.json()

      cart.renderContents(responseData)
      if (cart && cart.classList.contains('is-empty')) cart.classList.remove('is-empty')

      atcButton.setAttribute('aria-disabled', false)
      atcButton.classList.remove('loading')
      atcButton.querySelector('.loading__spinner').classList.add('hidden')
    })

    const moneyFormat = document.querySelector('#ks-qty-breaks').dataset.moneyFormat

    function formatMoney (cents) {
      if (typeof cents === 'string') {
        cents = cents.replace('.', '')
      }

      let value = ''
      const placeholderRegex = /\{\{\s*(\w+)\s*\}\}/

      function defaultOption (opt, def) {
        return (typeof opt === 'undefined' ? def : opt)
      }

      function formatWithDelimiters (number, precision, thousands, decimal) {
        precision = defaultOption(precision, 2)
        thousands = defaultOption(thousands, ',')
        decimal = defaultOption(decimal, '.')

        if (isNaN(number) || number == null) {
          return 0
        }

        number = (number / 100.0).toFixed(precision)

        const parts = number.split('.')
        const dollars = parts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1' + thousands)
        const cents = parts[1] ? (decimal + parts[1]) : ''

        return dollars + cents
      }

      switch (moneyFormat.match(placeholderRegex)[1]) {
      case 'amount':
        value = formatWithDelimiters(cents, 2)
        break
      case 'amount_no_decimals':
        value = formatWithDelimiters(cents, 0)
        break
      case 'amount_with_comma_separator':
        value = formatWithDelimiters(cents, 2, '.', ',')
        break
      case 'amount_no_decimals_with_comma_separator':
        value = formatWithDelimiters(cents, 0, '.', ',')
        break
      }

      return moneyFormat.replace(placeholderRegex, value)
    }
  }
  injectQtyBreaks()

  const listenVariantChanges = () => {
    document.querySelectorAll('variant-selects [name]').forEach(elem => {
      elem.addEventListener('change', () => { 
        document.querySelector('#ks-qty-breaks').style.opacity = '.2'

        setTimeout(async () => { 
          const respoonse = await fetch(window.location.href)
          const text = await respoonse.text()
          const newDocument = new DOMParser().parseFromString(text, 'text/html')

          document.querySelector('#ks-qty-breaks-hidden')
            .replaceWith(newDocument.querySelector('#ks-qty-breaks-hidden'))
          
          injectQtyBreaks()
        }, 500)
      })
    })
  }
  listenVariantChanges()
{%- endjavascript -%}

<div 
  id="ks-qty-breaks-hidden"
  data-btn-animate="{{ section.settings.btn_animate }}"
  data-inject-element="{{ section.settings.inject_element }}"
  data-inject-element-position="{{ section.settings.inject_element_position }}"
  hidden>
  <div 
    id="ks-qty-breaks"
    class="ks-qty-breaks"
    style="
      padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
      padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
    "
    data-money-format="{{ shop.money_format }}">
    <script type="application/json">
      {{ product.variants | json }}
    </script>
    <h3 
      id="ks-qty-breaks-title"
      class="ks-qty-breaks-title {{ section.settings.title_size }}">
      {{ section.settings.title }}
    </h3>
    <div 
      class="ks-qty-breaks-list"
      role="list" 
      aria-labelledby="ks-qty-breaks-title">
      {% for block in section.blocks %}
        <div 
          class="ks-qty-breaks-list-item"
          role="listitem">
          {% liquid 
            assign total_compare_price = current_variant.price | times: block.settings.qty | money_without_trailing_zeros
            assign total_price = 100 | minus: block.settings.discount | divided_by: 100.0 | times: current_variant.price | times: block.settings.qty | money_without_trailing_zeros
          %}
          <input 
            id="ks-qty-breaks-{{ forloop.index }}"
            class="bs-form-check-input" 
            type="radio"
            value="{{ block.settings.qty }}"
            data-discount="{{ block.settings.discount }}"
            name="ks-qty-breaks"
            {% if block.settings.selected %}checked{% endif %}>
          <label for="ks-qty-breaks-{{ forloop.index }}">
            <div class="ks-qty-breaks-label-inner">
              <div class="">
                <div class="ks-qty-breaks-label-title">
                  {{ block.settings.title | replace: '[', '<span class="color-accent-2">' | replace: ']', '</span>' }}
                </div>
                <div class="ks-qty-breaks-label-subtitle">
                  {{ block.settings.subtitle  | replace: '[', '<span>' | replace: ']', '</span>' }}
                </div>
              </div>
              <div class="ks-qty-breaks-label-total">
                {{ total_price }}
                {% if total_compare_price > total_price %}
                  <s>{{ total_compare_price }}</s>
                {% endif %}
              </div>
            </div>
            <div 
              class="ks-qty-breaks-variants" 
              role="list"
              aria-label="Select variants"
              {% if product.has_only_default_variant %}hidden{% endif %}>
              {% for count in (1..block.settings.qty) %}
                <div 
                  class="ks-qty-breaks-variant"
                  role="listitem">
                  <div class="ks-qty-breaks-variant-title" aria-hidden="true">
                    #{{ count }}
                  </div>
                  <div 
                    class="ks-qty-breaks-variant-options" 
                    role="list"
                    aria-label="Variant options">
                    {% for option in product.options_with_values %}
                      <div 
                        class="ks-qty-breaks-variant-option"
                        role="listitem">
                        {% if count == 1 %}
                          {% comment %} 
                            <span class="ks-form-label" aria-hidden="true">
                              {{ option.name }}
                            </span>
                          {% endcomment %}
                        {% endif %}
                        <select
                          class="ks-form-select"
                          aria-label="{{ option.name }}">
                          {% for value in option.values %}
                            <option 
                              value="{{ value | escape }}" {% if value == option.selected_value %}selected{% endif %}>
                              {{ value }}
                            </option>
                          {% endfor %}
                        </select>
                      </div>
                    {% endfor %}
                  </div>
                </div>
              {% endfor %}
            </div>
          </label>
        </div>
      {% endfor %}
    </div>
  </div>
</div>

{% schema %}
{
  "name": "KS - Quantity Breaks",
  "limit": 1,
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Buy more & save up to 20%"
    },
    {
      "type": "select",
      "id": "title_size",
      "label": "Title size",
      "options": [
        { "value": "h1", "label": "H1" },
        { "value": "h2", "label": "H2" },
        { "value": "h3", "label": "H3" },
        { "value": "h4", "label": "H4" },
        { "value": "h5", "label": "H5" },
        { "value": "h6", "label": "H6" }
      ],
      "default": "h3"
    },
    {
      "type": "text_alignment",
      "id": "title_text_align",
      "label": "Title text-align",
      "default": "center"
    },
    {
      "type": "range",
      "id": "item_border_opacity",
      "label": "Item border opacity",
      "min": 0,
      "max": 100,
      "default": 20,
      "step": 5,
      "unit": "%"
    },
    {
      "type": "range",
      "id": "item_border_radius",
      "label": "Item border radius",
      "min": 0,
      "max": 24,
      "default": 6,
      "step": 1,
      "unit": "px"
    },
    {
      "type": "select",
      "id": "btn_animate",
      "label": "\"Add to cart\" button animation",
      "options": [
        { "value": "", "label": "None" },
        { "value": "animate__shakeX", "label": "shakeX" },
        { "value": "animate__flash", "label": "flash" },
        { "value": "animate__heartBeat", "label": "heartBeat" },
        { "value": "animate__tada", "label": "tada" }
      ],
      "default": "animate__shakeX"
    },
    {
      "type": "color",
      "id": "badge_color",
      "label": "Badge color",
      "default": "#334fb4",
    },
    {
      "type": "header",
      "content": "Element to inject",
      "info": "If you are unsure about this, please contact our [support team](https://community.kondasoft.com)"
    },
    {
      "type": "text",
      "id": "inject_element",
      "label": "Element to inject",
      "default": "product-info product-form"
    },
    {
      "type": "select",
      "id": "inject_element_position",
      "label": "Inject position",
      "options": [
        { "value": "beforebegin", "label": "beforebegin" },
        { "value": "afterbegin", "label": "afterbegin" },
        { "value": "beforeend", "label": "beforeend" },
        { "value": "afterend", "label": "afterend" }
      ],
      "default": "beforebegin"
    },
    {
      "type": "header",
      "content": "Section padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 8
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 0
    },
    {
      "type": "header",
      "content": "Get Support",
      "info": "Please use our [Community Forum](https://community.kondasoft.com) to get help from our support team."
    },
    {
      "type": "header",
      "content": "Shopify Snippets",
      "info": "Check out our other [Shopify Snippets](https://www.kondasoft.com/collections/shopify-snippets)"
    },
    {
      "type": "header",
      "content": "Shopify Themes",
      "info": "Want to WOW your customers?! Check out our [Shopify Themes](https://www.kondasoft.com/collections/shopify-themes)."
    },
    {
      "type": "paragraph",
      "content": "Â© 2024 KondaSoft.com"
    }
  ],
  "blocks": [
    {
      "type": "tier",
      "name": "Tier",
      "settings": [
        {
          "type": "header",
          "content": "Config"
        },
        {
          "type": "checkbox",
          "id": "selected",
          "label": "Selected option",
          "default": false
        },
        {
          "type": "range",
          "id": "qty",
          "label": "Quantity",
          "min": 1,
          "max": 100,
          "default": 5
        },
        {
          "type": "range",
          "id": "discount",
          "label": "Discount",
          "min": 0,
          "max": 100,
          "default": 5,
          "unit": "%",
          "info": "You must create the [automatic discount](https://admin.shopify.com//discounts) with this value for the discount to apply to the cart"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Title",
          "default": "Buy 1 [Free shipping]"
        },
        {
          "type": "text",
          "id": "subtitle",
          "label": "Subtitle",
          "default": "You save: 10%"
        }
      ]
    }
  ],
  "enabled_on": {
    "templates": [ "product" ]
  },
  "presets": [
    {
      "name": "KS - Quantity Breaks",
      "blocks": [
        {
          "type": "tier",
          "settings": {
            "selected": false,
            "qty": 1,
            "discount": 0,
            "title": "Buy 1",
            "subtitle": "No savings",
          }
        },
        {
          "type": "tier",
          "settings": {
            "selected": true,
            "qty": 2,
            "discount": 10,
            "title": "Buy 2 [Most popular]",
            "subtitle": "You save: 10%",
          }
        },
        {
          "type": "tier",
          "settings": {
            "selected": false,
            "qty": 3,
            "discount": 20,
            "title": "Buy 3 [+ Free shipping]",
            "subtitle": "You save: 20%",
          }
        }
      ]
    }
  ]
}
{% endschema %}
