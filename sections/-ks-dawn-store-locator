{% liquid 
  # KS Store Locator
  # Â© 2024 KondaSoft
  # https://www.kondasoft.com
%}

<script src="https://unpkg.com/@googlemaps/markerclusterer/dist/index.min.js" defer></script>
<script>
  (g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})
    ({key: "{{ section.settings.map_key }}", v: "beta"});
</script>

<script src='https://api.mapbox.com/mapbox-gl-js/v2.9.1/mapbox-gl.js'></script>
<link href='https://api.mapbox.com/mapbox-gl-js/v2.9.1/mapbox-gl.css' rel='stylesheet' />

{%- style -%}
  #ks-store-locator-{{ section.id }} {
    display: block;
    overflow: hidden;
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  #ks-store-locator-{{ section.id }} .swiper {
    --swiper-theme-color: rgba(var(--color-foreground), 0.75);
    --swiper-navigation-size: 16px;
    --swiper-navigation-sides-offset: -4px;
    --swiper-pagination-bullet-inactive-color: var(--swiper-theme-color);
    --swiper-pagination-bottom: -24px;
    --swiper-scrollbar-bottom: -40px;
    --swiper-scrollbar-bg-color: rgba(var(--color-foreground), 0.1);
    --swiper-scrollbar-drag-bg-color: var(--swiper-theme-color);
    margin-left: -{{ section.settings.gap | times: 0.75 | round: 0 }}px;
    margin-right: -{{ section.settings.gap | times: 0.75 | round: 0 }}px;
  }

  .ks-store-locator .section-header .title {
    margin: 0 0 .5rem;
  }

  .ks-store-locator .section-header .description {
    margin-bottom: 1.75rem;
  }

  @media (min-width: 750px) {
    #ks-store-locator-{{ section.id }} {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
    #ks-store-locator-{{ section.id }} .swiper {
      --swiper-pagination-bottom: -30px;
      --swiper-scrollbar-bottom: -46px;
      margin-left: -{{ section.settings.gap }}px;
      margin-right: -{{ section.settings.gap }}px;
    }
    .ks-store-locator .section-header .title {
      margin: 0 0 1rem;
    }
    .ks-store-locator .section-header .description {
      margin-bottom: 2.25rem;
    }
  }

  .ks-store-locator div:empty {
    display: block;
  }

  .ks-store-locator .section-header {
    text-align: center;
  }

  .ks-store-locator-map {
  }

  .ks-store-locator-autocomplete {
    font-size: 16px;
    background-color: #fff;
    border-radius: 5px;
    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
    margin: 10px;
    padding: 5px;
  }

  gmp-place-autocomplete {
    width: 300px;
    font-size: 16px;
  }

{%- endstyle -%}

{%- javascript -%}
class KsStoreLocator extends HTMLElement {
  constructor () {
    super()

    this.map
    this.initMap()
  }

  async initMap () {
    const locations = [
      { 
        title: 'Location 1', 
        position: { lat: 44.50, lng: -89.50 }
      },
      { 
        title: 'Location 2', 
        position: { lat: 39.00, lng: -80.50 }
      },
      { 
        title: 'Location 3', 
        position: { lat: 44.00, lng: -72.69 }
      },
      { 
        title: 'Location 4', 
        position: { lat: 44.01, lng: -72.68 }
      }
    ]

    const lat = Number(this.dataset.mapPosition.split(',')[0])
    const lng = Number(this.dataset.mapPosition.split(',')[1])
    const { Map, InfoWindow } = await google.maps.importLibrary('maps')
    const { AdvancedMarkerElement, PinElement } = await google.maps.importLibrary('marker')
    const { PlaceAutocompleteElement } = await google.maps.importLibrary('places')

    // Map
    this.map = new Map(this.querySelector('.ks-store-locator-map'), {
      zoom: Number(this.dataset.mapZoom),
      center: { lat, lng },
      mapId: this.dataset.mapId
    })

    // Markers, InfoWindow
    const infoWindow = new google.maps.InfoWindow({
      content: '',
      disableAutoPan: true,
    })
    
    const markers = locations.map(location => {
      const pinElem = new google.maps.marker.PinElement({
        background: this.dataset.pinBg,
        borderColor: this.dataset.pinBorder,
        glyphColor: this.dataset.pinGlyph
      })

      const marker = new google.maps.marker.AdvancedMarkerElement({
        position: location.position,
        title: location.title,
        content: pinElem.element
      })

      marker.addListener('click', () => {
        infoWindow.setContent(location.title);
        infoWindow.open(this.map, marker)
      })
      return marker
    })

    new markerClusterer.MarkerClusterer({ markers, map: this.map })

    // Places Autocomplete
    const autocompleteCard = this.querySelector('.ks-store-locator-autocomplete')

    const autocompleteCountries = autocompleteCard.dataset.countries.length 
      ? autocompleteCard.dataset.countries.split(', ') 
      : []

    const placeAutocomplete = new google.maps.places.PlaceAutocompleteElement({
      componentRestrictions: {country: autocompleteCountries},
    })
    
    placeAutocomplete.id = autocompleteCard.dataset.autocompleteId
    autocompleteCard.appendChild(placeAutocomplete)
    this.map.controls[google.maps.ControlPosition.TOP_RIGHT].push(autocompleteCard)

    placeAutocomplete.addEventListener('gmp-placeselect', async ({ place }) => {
      await place.fetchFields({
        fields: ["displayName", "formattedAddress", "location"],
      })
      if (place.viewport) {
        map.fitBounds(place.viewport)
      } else {
        map.setCenter(place.location)
        map.setZoom(8)
      }
    })
  }
}
customElements.define('ks-store-locator', KsStoreLocator) 

{%- endjavascript -%}
 
<ks-store-locator 
  id="ks-store-locator-{{ section.id }}"
  class="ks-store-locator color-{{ section.settings.color_scheme }} gradient {% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
  data-map-id="map-{{ section.id }}"
  data-map-zoom="{{ section.settings.map_zoom }}"
  data-map-position="{{ section.settings.map_position }}"
  data-pin-bg="{{ section.settings.pin_bg }}"
  data-pin-border="{{ section.settings.pin_border }}"
  data-pin-glyph="{{ section.settings.pin_glyph }}">
  
  <div class="section-header page-width">
    {%- if section.settings.heading != blank -%}
      <h2 class="title inline-richtext {{ section.settings.heading_size }}">
        {{ section.settings.heading }}
      </h2>
    {%- endif -%}
    {%- if section.settings.description != blank %}
      <div class="description rte">
        {{ section.settings.description }}
      </div>
    {% endif %}
  </div>

  <div class="ks-store-locator-container {% if section.settings.container %}page-width{% endif %}">
    <div 
      class="ks-store-locator-map" 
      style="height: {{ section.settings.map_height | append: 'px' }}">
    </div>
    <div 
      class="ks-store-locator-autocomplete"
      data-autocomplete-id="autocomplete-{{ section.id }}"
      data-countries="{{ section.settings.autocomplete_countries }}">
    </div>

    <div id='map2' style='width: 100%; height: 550px;'></div>
      <script>
        mapboxgl.accessToken = 'pk.eyJ1IjoiYWx2aW5rb25kYSIsImEiOiJjbHgxbDFhdzAwNTBsMmxzZXA4YzZkeDNrIn0.1f3X84WpPpkcN4MBjprdKQ';
        var map = new mapboxgl.Map({
          container: 'map2',
          style: 'mapbox://styles/mapbox/streets-v11',
          center: [-98.56, 39.81],
          zoom: 4
        });

        map.addControl(new mapboxgl.NavigationControl())
      </script>


  </div>
  
</ks-store-locator>

{% schema %}
{
  "name": "KS - Store locator",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "General"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "background-1"
    },
    {
      "type": "checkbox",
      "id": "container",
      "label": "Wrap in a container",
      "default": true
    },
    {
      "type": "header",
      "content": "Header"
    },
    {
      "type": "inline_richtext",
      "id": "heading",
      "label": "Heading",
      "default": "Store Locator"
    },
    {
      "type": "select",
      "id": "heading_size",
      "label": "Heading size",
      "options": [
        { "value": "h2", "label": "Small" },
        { "value": "h1", "label": "Medium" },
        { "value": "h0", "label": "Large" }
      ],
      "default": "h1"
    },
    {
      "type": "richtext",
      "id": "description",
      "label": "Description",
      "default": "<p>Optional description for this section</p>",
      "info": "Leave empty to disable"
    },
    {
      "type": "header",
      "content": "Map"
    },
    {
      "type": "text",
      "id": "map_key",
      "label": "API key",
      "info": "Google Maps API key. Please watch our installation video if you need help obtaining and restricting the key."
    },
    {
      "type": "range",
      "id": "map_height",
      "label": "Map height (px)",
      "default": 550,
      "min": 400,
      "max": 800,
      "step": 50,
      "unit": "px"
    },
    {
      "type": "text",
      "id": "map_position",
      "label": "Initial position",
      "info": "Latitude,Longitude",
      "default": "39.81,-98.56"
    },
    {
      "type": "range",
      "id": "map_zoom",
      "label": "Initial zoom",
      "default": 5,
      "min": 2,
      "max": 12,
      "step": 1
    },
    {
      "type": "header",
      "content": "Pin styling"
    },
    {
      "type": "color",
      "id": "pin_bg",
      "label": "Bckground",
      "default": "#EA4335"
    },
    {
      "type": "color",
      "id": "pin_border",
      "label": "Border",
      "default": "#B31512"
    },
    {
      "type": "color",
      "id": "pin_glyph",
      "label": "Glyph",
      "default": "#B31512"
    },
    {
      "type": "header",
      "content": "Autocomplete widget"
    },
    {
      "type": "text",
      "id": "autocomplete_countries",
      "label": "Countries",
      "default": "us, ca",
      "info": "Comma separated list of countries to search in the autocomplete widget. Leave empty to allow all countries"
    },
    {
      "type": "header",
      "content": "Section padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 80
    },
    {
      "type": "header",
      "content": "Get Support",
      "info": "Please use our [Community Forum](https://community.kondasoft.com) to get help from our support team."
    },
    {
      "type": "header",
      "content": "Shopify Snippets",
      "info": "Check out our other [Shopify Snippets](https://www.kondasoft.com/collections/shopify-snippets)"
    },
    {
      "type": "header",
      "content": "Shopify Themes",
      "info": "Ready to take your store to the next level? Check out our [Premium Shopify Themes](https://www.kondasoft.com/collections/shopify-themes)."
    },
    {
      "type": "paragraph",
      "content": "Â© 2024 KondaSoft.com"
    }
  ],
  "presets": [
    {
      "name": "KS - Store locator"
    }
  ]
}
{% endschema %}
